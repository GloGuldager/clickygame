{"version":3,"sources":["components/ImageCard/index.js","components/Wrapper/index.js","components/CardBody.js","components/Navbar.js","components/Counter.js","components/Header.js","components/FooterPage.js","App.js","index.js"],"names":["ImageCard","props","react_default","a","createElement","className","alt","name","src","image","onClick","handleIncrement","Wrapper","children","CardBody","count","handleDecrement","styles","navbarStyle","background","Navbar","style","href","Counter","state","_this","setState","components_CardBody","this","components_Navbar","components_ImageCard","React","Component","headerStyle","Header","FooterPage","mdbreact_esm","color","fluid","Date","getFullYear","App","imagecards","removeImage","id","filter","_this2","Fragment","components_Header","components_Counter","components_Wrapper","map","key","components_FooterPage","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.70e3ea2f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction ImageCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      {/* <span onClick={() => props.handleIncrement(props.id)}>\n      </span> */}\n      <span onClick={props.handleIncrement}>\n      </span>\n\n    </div>\n  );\n}\n\n\n\nexport default ImageCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\n\n// If we want a child component to update or pass data to its parent, we can create a method inside the parent for the update\n// Then bind the method to the parent, and pass it to the child as a prop\n\nfunction CardBody(props) {\n  return (\n    <div className=\"card-body\">\n      <p className=\"card-text\">Click Count: {props.count}</p>\n      <button className=\"btn btn-primary\" onClick={props.handleIncrement}>\n        Increment\n      </button>{\" \"}\n      <button className=\"btn btn-danger\" onClick={props.handleDecrement}>\n        Decrement\n      </button>\n    </div>\n  );\n}\n\nexport default CardBody;\n","import React from \"react\";\nimport \"../styles/Navbar.css\";\nimport ImageCard from \"./ImageCard/index\";\n\n\n// By importing the Navbar.css file, it is added to the DOM whenever this component loads\n\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\n\nconst styles = {\n  navbarStyle: {\n    background: \"#6caddb\",\n    // justifyContent: \"flex-end\"\n  }\n};\n\n// We use JSX curly braces to evaluate the style object on the JSX tag\n\nfunction Navbar(props) {\n  return (\n    <nav style={styles.navbarStyle} className=\"navbar\">\n    <ul><li className=\"brand\"><a href=\"/\">Clicky Game</a></li><li className=\"alert\"></li><li className=\"Score\">Score: {props.count} | Top Score: 0</li></ul>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport CardBody from \"./CardBody\";\nimport Navbar from \"./Navbar\";\nimport ImageCard from \"./ImageCard/index\"\n\n// By extending the React.Component class, Counter inherits functionality from it\nclass Counter extends React.Component {\n  // Setting the initial state of the Counter component\n  state = {\n    count: 0\n  };\n\n  // handleIncrement increases this.state.count by 1\n  handleIncrement = () => {\n    // We always use the setState method to update a component's state\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  // handleDecrement decreases this.state.count by 1\n  handleDecrement = () => {\n    // We always use the setState method to update a component's state\n    this.setState({ count: this.state.count - 1 });\n  };\n\n  // The render method returns the JSX that should be rendered\n  render() {\n    return (\n      <div className=\"card text-center\">\n        <div className=\"card-header bg-primary text-white\">\n          Click Counter!\n        </div>\n        <CardBody\n          count={this.state.count}\n          handleIncrement={this.handleIncrement}\n          handleDecrement={this.handleDecrement}\n        />\n        <Navbar\n          count={this.state.count}\n          handleIncrement={this.handleIncrement}\n          handleDecrement={this.handleDecrement}\n        />\n        <ImageCard\n          count={this.state.count}\n          handleIncrement={this.handleIncrement}\n          handleDecrement={this.handleDecrement}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n","import React from \"react\";\nimport \"../styles/Header.css\";\n\n// By importing the Header.css file, it is added to the DOM whenever this component loads\n\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\n\nconst styles = {\n  headerStyle: {\n    background: '#6caddb'\n  },\n  // headingStyle: {\n  //   fontSize: 100\n  // }\n};\n\n// We use JSX curly braces to evaluate the style object\n\nfunction Header() {\n  return (\n    <header style={styles.headerStyle} className=\"header\">\n      {/* <h1>Clicky Game!</h1> */}\n      <h2>Click on an image to earn points, but don't click on any image more than once!</h2>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { MDBContainer, MDBFooter } from \"mdbreact\";\nimport \"../styles/Footer.css\";\n  \n\nconst FooterPage = () => {\n  return (\n\n\n    <MDBFooter color=\"blue\" className=\"font-small footer\">\n      <div className=\"footer-copyright text-center py-3\">\n        <MDBContainer fluid>\n          &copy; {new Date().getFullYear()} Copyright: <a href=\"https://gloguldager.github.io/\"> Gloria Guldager </a>\n        </MDBContainer>\n      </div>\n    </MDBFooter>\n  );\n}\n\nexport default FooterPage;","import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport imagecards from \"./imagecards.json\";\nimport Counter from \"./components/Counter\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport FooterPage from \"./components/FooterPage\";\n\nclass App extends Component {\n  // Setting this.state.imagecards to the imagecards json array\n  state = {\n    imagecards\n  };\n\n  removeImage = id => {\n    // Filter this.state.imagecards for imagecards with an id not equal to the id being removed\n    const imagecards = this.state.imagecards.filter(image => image.id !== id);\n    // Set this.state.imagecards equal to the new imagecards array\n    this.setState({ imagecards });\n  };\n\n  // Map over this.state.imagecards and render an ImageCard component for each image object\n  render() {\n    return (\n      <>\n      <Navbar/>\n      <Header/>\n      <Counter />\n      <Wrapper>\n        {this.state.imagecards.map(image => (\n          <ImageCard\n            removeImage={this.removeImage}\n            id={image.id}\n            key={image.id}\n            image={image.image}\n          />\n        ))}\n      </Wrapper>\n      <FooterPage />\n      </>\n  );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}